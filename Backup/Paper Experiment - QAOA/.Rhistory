)
qplot(data = popn, x = Time, y = Population,geom = c("line","point")) + labs(x = "Centuries Post 500 (count)", y = "Estimated Population (millions)",title = "Estimated Population  vs. Centuries Post 500")
##Prior Distribution
normal.N0<-function(endpts) {
a<-endpts[1]
b<-endpts[2]
eqn1<- 0.025 - pnorm(150,mean = a,sd = b)
eqn2<- 0.975 - pnorm(250,mean = a,sd = b)
return(eqn1^2+eqn2^2)
}
optim(par = c(200,1),fn = normal.N0)
set.seed(127)
dataList.popn<-list(N = nrow(popn),
t = popn$Time,
P = popn$Population)
fit.popn <- stan(model_code = ana@model_code,
data = dataList.popn,iter = 10000,warmup = 2000)
traceplot(fit.popn,inc_warmup=FALSE)
fit.popn
paras <- get_sampler_params(fit.popn,inc_warmup = FALSE)
summary(do.call(rbind,paras),digits=2)
pars.popn<-stan_to_df(fit.popn)
quantile(pars.popn$N0,c(0.025,0.975))
set.seed(127)
pars.popn<-stan_to_df(fit.popn)
N<-length(pars.popn$N0)
t<-(2020-500)/100
np<-rep(-1,N)
for (i in 1:N) {
N0<-pars.popn$N0[i]
beta<-pars.popn$beta[i]
sigma<-pars.popn$sigma[i]
np[i] <- rnorm(1,mean = N0*exp(beta*t),sd = sigma)
}
qplot(x=np,geom="density")+
labs(x = "Estimated Population (millions)",title = " Density Plot of the Estimated Population in the Year 2020")+
theme(plot.title = element_text(size = 12))
diz[t]=KL.gamma(a,b,c,d)}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(density(rnorm(0.0003,0.01,10000)))
rnorm(0.0003,0.01,10000)
rnorm(10000,0.0003,0.01)
plot(density(rnorm(10000,0.0003,0.01)))
plot(density(rnorm(10000,0.0003,0.001)))
plot(density(rnorm(10000,0.0003,0.01)))
plot(density(rnorm(10000,0.0003,0.1)))
plot(density(rnorm(10000,0.0003,0.0001)))
plot(density(rnorm(10000,0.0003,0.001)))
knitr::opts_chunk$set(echo = TRUE)
A <- structure(list(Time = c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.),
Counts = c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,
2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585)), .Names = c("Time", "Counts"),  class = "data.frame")
A <- structure(list(Time = c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.),
Counts = c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,
2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585)), .Names = c("Time", "Counts"),  class = "data.frame")
attach(A)
View(A)
x <- c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.)
y <- c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585))
x <- c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.)
y <- c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585)
mult_lm <- lm(log(y) ~ x)
coef(mult_lm)
x <- c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.)
y <- c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585)
mult_lm <- lm(log(y) ~ x)
# get the model's coefficients
lm_coef <- coef(mult_lm)
# make the plot
plot(t, y_mult)
x <- c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.)
y <- c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585)
mult_lm <- lm(log(y) ~ x)
# get the model's coefficients
lm_coef <- coef(mult_lm)
# make the plot
plot(x, y)
lines(x, exp(lm_coef[1])*exp(lm_coef[2]*t), col = "dodgerblue", lwd = 2)
x <- c(0.5, 1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5, 5.)
y <- c(1.04198521, 1.96763699, 2.23160269, 2.30502   , 2.28172333,2.36875302, 2.33174648, 2.40519884, 2.33542332, 2.33395585)
mult_lm <- lm(log(y) ~ x)
# get the model's coefficients
lm_coef <- coef(mult_lm)
# make the plot
plot(x, y)
lines(x, exp(lm_coef[1])*exp(lm_coef[2]*x), col = "dodgerblue", lwd = 2)
qnorm(0.975)
qnorm(0.995)
qnorm(0.9995)
qnorm(0.99995)
log(20)
log(100)
plot(density(rpois(1000,1000)))
log(10000)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
q1 <- read.csv("Data/Qubit1.csv",na.strings="NA",header=TRUE)
q2 <- read.csv("Data/Qubit2.csv",na.strings="NA",header=TRUE)
dataList.q1 <- list(N = nrow(q1),gp0 = 0.989,gp1 = 0.981,x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = 0.989,gp1 = 0.949,x = q2$x,y = q2$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 5000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q2 <- stan(model_code = q_model@model_code,data = dataList.q2,iter = 5000,warmup = 2000, control = list(adapt_delta = 0.99))
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
fit.q1
fit.q2
fit.q2
fit.q1
fit.q2
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
fit.q1$p0
fit.q1$p0
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
fit.q1
fit.q2
stan_to_df(fit.q1)
summary(fit.q1)
get_sampler_params(fit.p1,inc_warmup = FALSE)
get_sampler_params(fit.q1,inc_warmup = FALSE)
params.q1 <-get_sampler_params(fit.q1,inc_warmup = FALSE)
params.q1 <-get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,params.q1))
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q2,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
summarise(fit.q1)
stan_to_df(fit.q1)
mean(stan_to_df(fit.q1)$p0)
noise_params.q1$p0 <- mean(stan_to_df(fit.q1)$p0)
noise_params.q1 <- list(p0 = mean(stan_to_df(fit.q1)$p0),p1 = mean(stan_to_df(fit.q1)$p0))
noise_params.q1 <- list(p0 = mean(stan_to_df(fit.q1)$p0),p1 = mean(stan_to_df(fit.q1)$p0))
noise_params.q1
noise_params.q1 <- list(p0 = mean(stan_to_df(fit.q1)$p0),p1 = mean(stan_to_df(fit.q1)$p0))
noise_params.q2 <- list(p0 = mean(stan_to_df(fit.q2)$p0),p1 = mean(stan_to_df(fit.q2)$p0))
noise_params
noise_params.q1 <- list(p0 = mean(stan_to_df(fit.q1)$p0),p1 = mean(stan_to_df(fit.q1)$p0))
noise_params.q2 <- list(p0 = mean(stan_to_df(fit.q2)$p0),p1 = mean(stan_to_df(fit.q2)$p0))
noise_params.q1
noise_params.q2
noise_params.q1 <- list(p0 = mean(stan_to_df(fit.q1)$p0),p1 = mean(stan_to_df(fit.q1)$p1))
noise_params.q2 <- list(p0 = mean(stan_to_df(fit.q2)$p0),p1 = mean(stan_to_df(fit.q2)$p1))
noise_params.q1
noise_params.q2
dataList.q1 <- list(N = nrow(q1),gp0 = 0.989,gp1 = 0.981,x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = 0.989,gp1 = 0.949,x = q2$x,y = q2$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q2 <- stan(model_code = q_model@model_code,data = dataList.q2,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q2,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
fit.q1
fit.q2
noise_params.q1 <- list(p0 = mean(stan_to_df(fit.q1)$p0),p1 = mean(stan_to_df(fit.q1)$p1))
noise_params.q2 <- list(p0 = mean(stan_to_df(fit.q2)$p0),p1 = mean(stan_to_df(fit.q2)$p1))
noise_params.q1
noise_params.q2
a = 'ds'
b = 'sds'
a+b
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
file_address <- 'QAOA/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
file_address <- 'QAOA/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=TRUE)
file_address <- 'QAOA/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=TRUE)
file_address <- 'QAOA/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
means
means$V1
means$V1[0]
means$V1[1]
file_address <- 'QAOA/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
means$V1
means$V1[0]
means$V1(0)
means$V1[1]
file_address <- 'QAOA/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
dataList.q1 <- list(N = nrow(q1),gp0 = means$V1[1],gp1 = means$V2[1],x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = means$V1[2],gp1 = means$V2[2],x = q2$x,y = q2$y)
dataList.q3 <- list(N = nrow(q3),gp0 = means$V1[3],gp1 = means$V2[3],x = q3$x,y = q3$y)
dataList.q4 <- list(N = nrow(q4),gp0 = means$V1[4],gp1 = means$V2[4],x = q4$x,y = q4$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q2 <- stan(model_code = q_model@model_code,data = dataList.q2,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q3 <- stan(model_code = q_model@model_code,data = dataList.q3,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q4 <- stan(model_code = q_model@model_code,data = dataList.q4,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
traceplot(fit.q3,inc_warmup=FALSE)
traceplot(fit.q4,inc_warmup=FALSE)
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q2,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q3,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q4,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
fit.q1
fit.q2
fit.q3
fit.q4
df.q1 <- stan_to_df(fit.q1)
df.q2 <- stan_to_df(fit.q2)
df.q3 <- stan_to_df(fit.q3)
df.q4 <- stan_to_df(fit.q4)
noise_params.q1 <- data.frame(p0 = df.q1$p0,p1 = df.q1$p1)
noise_params.q2 <- data.frame(p0 = df.q2$p0,p1 = df.q2$p1)
noise_params.q3 <- data.frame(p0 = df.q3$p0,p1 = df.q3$p1)
noise_params.q4 <- data.frame(p0 = df.q4$p0,p1 = df.q4$p1)
write.csv(noise_params.q1,paste(file_address,"StandPostQubit1.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q2,paste(file_address,"StandPostQubit2.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q3,paste(file_address,"StandPostQubit3.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q4,paste(file_address,"StandPostQubit4.csv",sep = ""), row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
install.packages("rstan")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("rstan")
install.packages("Rtools")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
mc.cores = parallel::detectCores()
Sys.setenv(LOCAL_CPPFLAGS = '-march=native -mtune=native')
library(rstan)
rstan_options(auto_write = TRUE)
source("MA480Styles.R")
install.packages("HDInterval")
knitr::opts_chunk$set(echo = TRUE)
mc.cores = parallel::detectCores()
Sys.setenv(LOCAL_CPPFLAGS = '-march=native -mtune=native')
library(rstan)
rstan_options(auto_write = TRUE)
source("MA480Styles.R")
install.packages("bridgesampling")
knitr::opts_chunk$set(echo = TRUE)
mc.cores = parallel::detectCores()
Sys.setenv(LOCAL_CPPFLAGS = '-march=native -mtune=native')
library(rstan)
rstan_options(auto_write = TRUE)
source("MA480Styles.R")
file_address <- 'Grover/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
install.packages("backports")
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
writeLines('PATH="${C:\rtools40\home}\\usr\\bin;${PATH}"', con = "~/.Renviron")
writeLines('PATH="${C:/rtools40/home}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
Sys.which("make")
Sys.which("make")
install.packages("stats")
install.packages("stats")
install.packages("jsonlite", type = "source")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
file_address <- 'Grover/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
dataList.q1 <- list(N = nrow(q1),gp0 = means$V1[1],gp1 = means$V2[1],x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = means$V1[2],gp1 = means$V2[2],x = q2$x,y = q2$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
example(stan_model, package = "rstan", run.dontrun = TRUE)
install.packages(
"https://win-builder.r-project.org/8bPDZPDG0522/rstan_2.21.2.zip",
repos = NULL, type = "win.binary")
install.packages("rstan")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
file_address <- 'Grover/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
install.packages("remote")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
install.packages("remotes")
remotes::install_github("stan-dev/rstan", ref = "develop", subdir = "rstan/rstan")
install.packages(
"https://win-builder.r-project.org/gdaEAY9p8V7I/StanHeaders_2.21.0-6.zip",
repos = NULL, type = "win.binary")
install.packages(
"https://win-builder.r-project.org/8GI7TA5e2eyj/rstan_2.21.2.zip",
repos = NULL, type = "win.binary")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
file_address <- 'Grover/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
install.packages("rmarkdown")
install.packages("ggplot2")
install.packages("rstan")
install.packages("tidyverse")
install.packages("HDInterval")
install.packages("bridgesampling")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
install.packages(
"ggplot2",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('data.table', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
library(Rcpp)
library(Rcpp)
remove('Rcpp')
remove.packages("Rcpp")
install.packages("Rcpp")
library(Rcpp)
library(ggplot2)
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("devtools")
devtools::install_github("cran/rlang")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
file_address <- 'Noise/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
dataList.q1 <- list(N = nrow(q1),gp0 = means$V1[2],gp1 = means$V2[2],x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = means$V1[1],gp1 = means$V2[1],x = q2$x,y = q2$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q2 <- stan(model_code = q_model@model_code,data = dataList.q2,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q2,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
fit.q1
fit.q2
df.q1 <- stan_to_df(fit.q1)
df.q2 <- stan_to_df(fit.q2)
noise_params.q1 <- data.frame(p0 = df.q1$p0,p1 = df.q1$p1)
noise_params.q2 <- data.frame(p0 = df.q2$p0,p1 = df.q2$p1)
write.csv(noise_params.q1,paste(file_address,"StandPostQubit1.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q2,paste(file_address,"StandPostQubit2.csv",sep = ""), row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
library(rstan)
source("MA480Styles.R")
file_address <- 'Noise/'
q1 <- read.csv(paste(file_address,"Qubit1.csv",sep = ""),na.strings="NA",header=TRUE)
q2 <- read.csv(paste(file_address,"Qubit2.csv",sep = ""),na.strings="NA",header=TRUE)
q3 <- read.csv(paste(file_address,"Qubit3.csv",sep = ""),na.strings="NA",header=TRUE)
q4 <- read.csv(paste(file_address,"Qubit4.csv",sep = ""),na.strings="NA",header=TRUE)
means <- read.csv(paste(file_address,"given_params.csv",sep = ""),na.strings="NA",header=FALSE)
dataList.q1 <- list(N = nrow(q1),gp0 = means$V1[4],gp1 = means$V2[4],x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = means$V1[3],gp1 = means$V2[3],x = q2$x,y = q2$y)
dataList.q3 <- list(N = nrow(q3),gp0 = means$V1[2],gp1 = means$V2[2],x = q3$x,y = q3$y)
dataList.q4 <- list(N = nrow(q4),gp0 = means$V1[1],gp1 = means$V2[1],x = q4$x,y = q4$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 8000,warmup = 1000, control = list(adapt_delta = 0.99))
fit.q2 <- stan(model_code = q_model@model_code,data = dataList.q2,iter = 8000,warmup = 1000, control = list(adapt_delta = 0.99))
fit.q3 <- stan(model_code = q_model@model_code,data = dataList.q3,iter = 8000,warmup = 1000, control = list(adapt_delta = 0.99))
fit.q4 <- stan(model_code = q_model@model_code,data = dataList.q4,iter = 8000,warmup = 1000, control = list(adapt_delta = 0.99))
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
traceplot(fit.q3,inc_warmup=FALSE)
traceplot(fit.q4,inc_warmup=FALSE)
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q2,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q3,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q4,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
fit.q1
fit.q2
fit.q3
fit.q4
df.q1 <- stan_to_df(fit.q1)
df.q2 <- stan_to_df(fit.q2)
df.q3 <- stan_to_df(fit.q3)
df.q4 <- stan_to_df(fit.q4)
noise_params.q1 <- data.frame(p0 = df.q1$p0,p1 = df.q1$p1)
noise_params.q2 <- data.frame(p0 = df.q2$p0,p1 = df.q2$p1)
noise_params.q3 <- data.frame(p0 = df.q3$p0,p1 = df.q3$p1)
noise_params.q4 <- data.frame(p0 = df.q4$p0,p1 = df.q4$p1)
write.csv(noise_params.q1,paste(file_address,"StandPostQubit1.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q2,paste(file_address,"StandPostQubit2.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q3,paste(file_address,"StandPostQubit3.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q4,paste(file_address,"StandPostQubit4.csv",sep = ""), row.names = FALSE)
dataList.q1 <- list(N = nrow(q1),gp0 = means$V1[4],gp1 = means$V2[4],x = q1$x,y = q1$y)
dataList.q2 <- list(N = nrow(q2),gp0 = means$V1[3],gp1 = means$V2[3],x = q2$x,y = q2$y)
dataList.q3 <- list(N = nrow(q3),gp0 = means$V1[2],gp1 = means$V2[2],x = q3$x,y = q3$y)
dataList.q4 <- list(N = nrow(q4),gp0 = means$V1[1],gp1 = means$V2[1],x = q4$x,y = q4$y)
fit.q1 <- stan(model_code = q_model@model_code,data = dataList.q1,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q2 <- stan(model_code = q_model@model_code,data = dataList.q2,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q3 <- stan(model_code = q_model@model_code,data = dataList.q3,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
fit.q4 <- stan(model_code = q_model@model_code,data = dataList.q4,iter = 10000,warmup = 2000, control = list(adapt_delta = 0.99))
traceplot(fit.q1,inc_warmup=FALSE)
traceplot(fit.q2,inc_warmup=FALSE)
traceplot(fit.q3,inc_warmup=FALSE)
traceplot(fit.q4,inc_warmup=FALSE)
sampler_params <- get_sampler_params(fit.q1,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q2,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q3,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
sampler_params <- get_sampler_params(fit.q4,inc_warmup = FALSE)
summary(do.call(rbind,sampler_params),digits=2)
fit.q1
fit.q2
fit.q3
fit.q4
df.q1 <- stan_to_df(fit.q1)
df.q2 <- stan_to_df(fit.q2)
df.q3 <- stan_to_df(fit.q3)
df.q4 <- stan_to_df(fit.q4)
noise_params.q1 <- data.frame(p0 = df.q1$p0,p1 = df.q1$p1)
noise_params.q2 <- data.frame(p0 = df.q2$p0,p1 = df.q2$p1)
noise_params.q3 <- data.frame(p0 = df.q3$p0,p1 = df.q3$p1)
noise_params.q4 <- data.frame(p0 = df.q4$p0,p1 = df.q4$p1)
write.csv(noise_params.q1,paste(file_address,"StandPostQubit1.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q2,paste(file_address,"StandPostQubit2.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q3,paste(file_address,"StandPostQubit3.csv",sep = ""), row.names = FALSE)
write.csv(noise_params.q4,paste(file_address,"StandPostQubit4.csv",sep = ""), row.names = FALSE)
